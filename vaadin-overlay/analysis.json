{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/vaadin-overlay.html",
        "start": {
          "line": 539,
          "column": 4
        },
        "end": {
          "line": 539,
          "column": 40
        }
      },
      "elements": [
        {
          "description": "`<vaadin-overlay>` is a Polymer 2 element for creating overlays.\n\n### Styling\n\nThe following Shadow DOM parts are available for styling:\n\nPart name  | Description\n-----------|---------------------------------------------------------|\n`backdrop` | Backdrop of the overlay\n`overlay`  | Container for position/sizing/alignment of the content\n`content`  | Content of the overlay\n\nThe following custom CSS properties are available for styling:\n\nCustom CSS property | Description | Default value\n---|---|---\n`--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0px` or detected offset\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-overlay.html",
          "properties": [
            {
              "name": "opened",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 131,
                  "column": 10
                },
                "end": {
                  "line": 135,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "template",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 10
                },
                "end": {
                  "line": 140,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "content",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 142,
                  "column": 10
                },
                "end": {
                  "line": 145,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "withBackdrop",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 10
                },
                "end": {
                  "line": 151,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "modeless",
              "type": "boolean",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 157,
                  "column": 10
                },
                "end": {
                  "line": 162,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_modelessChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "focusTrap",
              "type": "boolean",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 168,
                  "column": 10
                },
                "end": {
                  "line": 171,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "_focusedElement",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 173,
                  "column": 10
                },
                "end": {
                  "line": 175,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_mouseDownInside",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 10
                },
                "end": {
                  "line": 179,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_mouseUpInside",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 181,
                  "column": 10
                },
                "end": {
                  "line": 183,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_instance",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 185,
                  "column": 10
                },
                "end": {
                  "line": 187,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_boundIronOverlayCanceledListener",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 189,
                  "column": 10
                },
                "end": {
                  "line": 191,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 221,
                  "column": 6
                },
                "end": {
                  "line": 232,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_detectIosNavbar",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 234,
                  "column": 6
                },
                "end": {
                  "line": 251,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setTemplateFromNodes",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 253,
                  "column": 6
                },
                "end": {
                  "line": 255,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "nodes"
                }
              ]
            },
            {
              "name": "close",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 6
                },
                "end": {
                  "line": 267,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "sourceEvent"
                }
              ]
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 269,
                  "column": 6
                },
                "end": {
                  "line": 280,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 282,
                  "column": 6
                },
                "end": {
                  "line": 298,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_mouseDownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 300,
                  "column": 6
                },
                "end": {
                  "line": 302,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_mouseUpListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 304,
                  "column": 6
                },
                "end": {
                  "line": 306,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_outsideClickListener",
              "description": "We need to listen on 'click' / 'tap' event and capture it and close the overlay before\npropagating the event to the listener in the button. Otherwise, if the clicked button would call\nopen(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 316,
                  "column": 6
                },
                "end": {
                  "line": 333,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_keydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 339,
                  "column": 6
                },
                "end": {
                  "line": 369,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 375,
                  "column": 6
                },
                "end": {
                  "line": 404,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ]
            },
            {
              "name": "_modelessChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 413,
                  "column": 6
                },
                "end": {
                  "line": 421,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "modeless"
                }
              ]
            },
            {
              "name": "_enterModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 423,
                  "column": 6
                },
                "end": {
                  "line": 433,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_exitModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 435,
                  "column": 6
                },
                "end": {
                  "line": 444,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_templateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 446,
                  "column": 6
                },
                "end": {
                  "line": 457,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template"
                }
              ]
            },
            {
              "name": "_contentChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 459,
                  "column": 6
                },
                "end": {
                  "line": 461,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "content"
                }
              ]
            },
            {
              "name": "_setFocus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 463,
                  "column": 6
                },
                "end": {
                  "line": 494,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index"
                },
                {
                  "name": "increment"
                }
              ]
            },
            {
              "name": "_isVisible",
              "description": "borrowed from jqeury $(elem).is(':visible') implementation",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 497,
                  "column": 6
                },
                "end": {
                  "line": 499,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "elem"
                }
              ]
            },
            {
              "name": "_getFocusableElements",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 501,
                  "column": 6
                },
                "end": {
                  "line": 525,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_processPendingMutationObserversFor",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 527,
                  "column": 6
                },
                "end": {
                  "line": 531,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 532,
              "column": 5
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.OverlayElement",
          "attributes": [
            {
              "name": "opened",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 131,
                  "column": 10
                },
                "end": {
                  "line": 135,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "template",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 10
                },
                "end": {
                  "line": 140,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "content",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 142,
                  "column": 10
                },
                "end": {
                  "line": 145,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "with-backdrop",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 10
                },
                "end": {
                  "line": 151,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "modeless",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "sourceRange": {
                "start": {
                  "line": 157,
                  "column": 10
                },
                "end": {
                  "line": 162,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "focus-trap",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "sourceRange": {
                "start": {
                  "line": 168,
                  "column": 10
                },
                "end": {
                  "line": 171,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-close",
              "description": "vaadin-overlay-close\nfired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-escape-press",
              "description": "vaadin-overlay-escape-press\nfired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-open",
              "description": "vaadin-overlay-open\nfired after the `vaadin-overlay` is opened.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-outside-click",
              "description": "vaadin-overlay-outside-click\nfired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "opened-changed",
              "description": "Fired when the `opened` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "template-changed",
              "description": "Fired when the `template` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "content-changed",
              "description": "Fired when the `content` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-overlay",
          "mixins": [
            "Vaadin.ThemableMixin"
          ]
        }
      ]
    }
  ]
}
