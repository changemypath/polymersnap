{
    "summary": {
        "success": 26,
        "failed": 4,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "68947124",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2345,
                    "netTime": 560,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420742881,
                    "endTime": 1507420742909
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420742916,
                    "endTime": 1507420742940
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 154,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420743518,
                    "endTime": 1507420743674
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 58,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744064,
                    "endTime": 1507420744123
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 44,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744129,
                    "endTime": 1507420744173
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744425,
                    "endTime": 1507420744437
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744438,
                    "endTime": 1507420744444
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                        "assert@base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:12089:9",
                        "toEqual@base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:16148:10",
                        "@base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:17456:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"C\"\n  \"a\"\n  \"n\"\n  \"j\"\n  \"s\"\n]"
                        }
                    ],
                    "startTime": 1507420744445,
                    "endTime": 1507420744470
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                        "assert@base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:12089:9",
                        "toEqual@base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:16148:10",
                        "@base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:17463:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"canjs\"\n  \"repo\": \"CanJS\"\n}"
                        }
                    ],
                    "startTime": 1507420744472,
                    "endTime": 1507420744490
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 44,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744491,
                    "endTime": 1507420744535
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 70,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744704,
                    "endTime": 1507420744779
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744786,
                    "endTime": 1507420744809
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 31,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745100,
                    "endTime": 1507420745131
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745132,
                    "endTime": 1507420745150
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 21,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745151,
                    "endTime": 1507420745172
                }
            ]
        },
        {
            "browser": {
                "id": "85695287",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/61.0.3163.100 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1641,
                    "netTime": 817,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 120,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420733562,
                    "endTime": 1507420733683
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420733704,
                    "endTime": 1507420733711
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420733712,
                    "endTime": 1507420733735
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 334,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420733751,
                    "endTime": 1507420734086
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734100,
                    "endTime": 1507420734109
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734109,
                    "endTime": 1507420734112
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734112,
                    "endTime": 1507420734116
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 185,
                    "log": [
                        "Error: Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                        "    at assert (base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:12089:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:16148:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:17456:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"C\"\n  \"a\"\n  \"n\"\n  \"j\"\n  \"s\"\n]"
                        }
                    ],
                    "startTime": 1507420734119,
                    "endTime": 1507420734327
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "Error: Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                        "    at assert (base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:12089:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:16148:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5651e4a5bcab911ec41683a2495b15deaf2f2433:17463:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"canjs\"\n  \"repo\": \"CanJS\"\n}"
                        }
                    ],
                    "startTime": 1507420734340,
                    "endTime": 1507420734356
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734356,
                    "endTime": 1507420734362
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734367,
                    "endTime": 1507420734377
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734377,
                    "endTime": 1507420734388
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 81,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734388,
                    "endTime": 1507420734469
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734654,
                    "endTime": 1507420734662
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420734662,
                    "endTime": 1507420734666
                }
            ]
        }
    ],
    "library": {
        "name": "can-component",
        "version": "3.3.4"
    }
}