{
    "summary": {
        "success": 10,
        "failed": 20,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "6249935",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/60.0.3112.113 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2771,
                    "netTime": 887,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 286,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819560505,
                    "endTime": 1504819561467
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819561484,
                    "endTime": 1504819561506
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 323,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819561508,
                    "endTime": 1504819561834
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 156,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819561855,
                    "endTime": 1504819562013
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 78,
                    "log": [
                        "Error: Expected true to be false",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toBe (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:194:28)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38799:75)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1504819562020,
                    "endTime": 1504819562111
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected '{{$ctrl.num}}' to equal 42",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38805:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1504819562166,
                    "endTime": 1504819562193
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Error: Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38810:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1504819562197,
                    "endTime": 1504819562349
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38815:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1504819562489,
                    "endTime": 1504819562500
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38820:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1504819562501,
                    "endTime": 1504819562649
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819562654,
                    "endTime": 1504819562813
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38843:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819562814,
                    "endTime": 1504819562820
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38854:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819562820,
                    "endTime": 1504819562827
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38865:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819562828,
                    "endTime": 1504819563098
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38876:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819563099,
                    "endTime": 1504819563114
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:30)",
                        "    at Context.it (base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38887:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819563115,
                    "endTime": 1504819563125
                }
            ]
        },
        {
            "browser": {
                "id": "52169418",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2861,
                    "netTime": 351,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 22,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819570422,
                    "endTime": 1504819570882
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819570897,
                    "endTime": 1504819570917
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 86,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819570925,
                    "endTime": 1504819571026
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 41,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571306,
                    "endTime": 1504819571360
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Expected true to be false",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toBe@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:194:8",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38799:7",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1504819571366,
                    "endTime": 1504819571398
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected '{{$ctrl.num}}' to equal 42",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38805:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1504819571401,
                    "endTime": 1504819571591
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 41,
                    "log": [
                        "Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38810:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1504819571882,
                    "endTime": 1504819571963
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38815:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1504819571981,
                    "endTime": 1504819572139
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38820:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1504819572142,
                    "endTime": 1504819572196
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819572296,
                    "endTime": 1504819572470
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38843:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819572474,
                    "endTime": 1504819572502
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 23,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38854:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819572505,
                    "endTime": 1504819572537
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38865:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819572555,
                    "endTime": 1504819572638
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38876:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819572639,
                    "endTime": 1504819572658
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 65,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:102:9",
                        "toEqual@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:209:10",
                        "@base/tests.webpack.js?8e4078a7b59b882a023fdc6727aca56e3386b033:38887:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819572662,
                    "endTime": 1504819572805
                }
            ]
        }
    ]
}