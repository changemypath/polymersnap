{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "47344366",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/63.0.3239.84 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 278,
                    "netTime": 94,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414214,
                    "endTime": 1513884414265,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414269,
                    "endTime": 1513884414286,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414287,
                    "endTime": 1513884414309,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414311,
                    "endTime": 1513884414325,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414329,
                    "endTime": 1513884414350,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414351,
                    "endTime": 1513884414361,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414362,
                    "endTime": 1513884414373,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884414374,
                    "endTime": 1513884414381,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42764:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1513884414382,
                    "endTime": 1513884414386,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42770:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1513884414387,
                    "endTime": 1513884414395,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42785:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884414396,
                    "endTime": 1513884414409,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42797:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884414409,
                    "endTime": 1513884414422,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42809:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884414425,
                    "endTime": 1513884414431,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42821:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884414434,
                    "endTime": 1513884414454,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 17,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42833:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884414454,
                    "endTime": 1513884414479,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "83130014",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1225,
                    "netTime": 242,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408241,
                    "endTime": 1513884408305,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408312,
                    "endTime": 1513884408331,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408333,
                    "endTime": 1513884408631,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 62,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408633,
                    "endTime": 1513884408707,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408749,
                    "endTime": 1513884408801,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408803,
                    "endTime": 1513884408844,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408913,
                    "endTime": 1513884408939,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884408941,
                    "endTime": 1513884408960,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "wc is not defined",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42764:11",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1513884408962,
                    "endTime": 1513884408972,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "wc is not defined",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42770:11",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1513884408974,
                    "endTime": 1513884408979,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 17,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9",
                        "toEqual@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:10",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42785:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884408982,
                    "endTime": 1513884409020,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9",
                        "toEqual@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:10",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42797:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884409062,
                    "endTime": 1513884409077,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 27,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9",
                        "toEqual@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:10",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42809:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884409078,
                    "endTime": 1513884409108,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9",
                        "toEqual@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:10",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42821:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884409109,
                    "endTime": 1513884409126,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 58,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:108:9",
                        "toEqual@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:242:10",
                        "@base/tests.webpack.js?f268575d230f67ba498f1a61024083a35d60a398:42833:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884409128,
                    "endTime": 1513884409189,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.7"
    }
}