{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "82161754",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/61.0.3163.100 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1540,
                    "netTime": 784,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 348,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420728506,
                    "endTime": 1507420728857
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 166,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420728920,
                    "endTime": 1507420729086
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420729286,
                    "endTime": 1507420729297
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420729300,
                    "endTime": 1507420729307
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420729308,
                    "endTime": 1507420729320
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420729321,
                    "endTime": 1507420729322
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420729322,
                    "endTime": 1507420729338
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 50,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2201:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1507420729369,
                    "endTime": 1507420729651
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2208:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1507420729663,
                    "endTime": 1507420729672
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420729672,
                    "endTime": 1507420729704
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 99,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2266:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420729705,
                    "endTime": 1507420729804
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 20,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2276:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420729884,
                    "endTime": 1507420729904
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2286:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420729978,
                    "endTime": 1507420729983
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2296:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420729984,
                    "endTime": 1507420729994
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2306:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420729997,
                    "endTime": 1507420730005
                }
            ]
        },
        {
            "browser": {
                "id": "94567031",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 761,
                    "netTime": 350,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744793,
                    "endTime": 1507420744829
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 55,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420744834,
                    "endTime": 1507420744890
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 41,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745087,
                    "endTime": 1507420745129
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 21,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745146,
                    "endTime": 1507420745171
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745172,
                    "endTime": 1507420745178
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745178,
                    "endTime": 1507420745182
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745183,
                    "endTime": 1507420745187
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 16,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2201:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1507420745188,
                    "endTime": 1507420745219
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2208:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1507420745222,
                    "endTime": 1507420745229
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 22,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507420745230,
                    "endTime": 1507420745252
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 33,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2266:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420745281,
                    "endTime": 1507420745316
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 17,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2276:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420745318,
                    "endTime": 1507420745336
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2286:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420745337,
                    "endTime": 1507420745347
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 56,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2296:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420745349,
                    "endTime": 1507420745406
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 29,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:776:9",
                        "toEqual@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:1133:10",
                        "@base/tests.webpack.js?6e432da239fcd0d5c56be62e5b7e338b07acf816:2306:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507420745422,
                    "endTime": 1507420745451
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.0.0"
    }
}