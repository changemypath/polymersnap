{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "25147470",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/60.0.3112.113 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 834,
                    "netTime": 452,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564494,
                    "endTime": 1504819564530
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 227,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564536,
                    "endTime": 1504819564797
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564820,
                    "endTime": 1504819564830
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564831,
                    "endTime": 1504819564837
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564837,
                    "endTime": 1504819564839
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564840,
                    "endTime": 1504819564841
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819564842,
                    "endTime": 1504819564843
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12543:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1504819564843,
                    "endTime": 1504819565120
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12550:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1504819565123,
                    "endTime": 1504819565127
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 111,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819565127,
                    "endTime": 1504819565238
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12608:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819565249,
                    "endTime": 1504819565255
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12618:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819565256,
                    "endTime": 1504819565260
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12628:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819565260,
                    "endTime": 1504819565263
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 20,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12638:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819565264,
                    "endTime": 1504819565284
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 24,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12648:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819565284,
                    "endTime": 1504819565308
                }
            ]
        },
        {
            "browser": {
                "id": "65851856",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1321,
                    "netTime": 320,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571372,
                    "endTime": 1504819571391
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571395,
                    "endTime": 1504819571409
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 83,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571412,
                    "endTime": 1504819571496
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571596,
                    "endTime": 1504819571617
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571625,
                    "endTime": 1504819571642
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571643,
                    "endTime": 1504819571650
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571652,
                    "endTime": 1504819571658
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 74,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12543:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1504819571662,
                    "endTime": 1504819571739
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12550:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1504819571764,
                    "endTime": 1504819571775
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1504819571777,
                    "endTime": 1504819571788
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12608:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819571789,
                    "endTime": 1504819571802
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12618:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819571807,
                    "endTime": 1504819571821
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 20,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12628:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819571822,
                    "endTime": 1504819571843
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 19,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12638:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819571845,
                    "endTime": 1504819571870
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12648:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1504819572053,
                    "endTime": 1504819572059
                }
            ]
        }
    ]
}