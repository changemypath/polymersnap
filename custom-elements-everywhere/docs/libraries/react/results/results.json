{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "2081862",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 5142,
                    "netTime": 676,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 191,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884401212,
                    "endTime": 1513884402024,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 116,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884403174,
                    "endTime": 1513884403292,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 137,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884403664,
                    "endTime": 1513884403807,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 78,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884404035,
                    "endTime": 1513884404113,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884404116,
                    "endTime": 1513884404126,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 48,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884404127,
                    "endTime": 1513884404175,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884404672,
                    "endTime": 1513884404680,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884404682,
                    "endTime": 1513884404700,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 21,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24573:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1513884404702,
                    "endTime": 1513884404776,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24581:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1513884404920,
                    "endTime": 1513884404926,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24594:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884404928,
                    "endTime": 1513884404944,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24605:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884404946,
                    "endTime": 1513884404954,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24616:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884404956,
                    "endTime": 1513884404961,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24627:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884405057,
                    "endTime": 1513884405255,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9",
                        "toEqual@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:10",
                        "@base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24638:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884405258,
                    "endTime": 1513884405264,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "26886924",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/63.0.3239.84 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 535,
                    "netTime": 370,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 218,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411277,
                    "endTime": 1513884411497,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411562,
                    "endTime": 1513884411567,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411568,
                    "endTime": 1513884411573,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411583,
                    "endTime": 1513884411593,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411593,
                    "endTime": 1513884411597,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411597,
                    "endTime": 1513884411598,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411598,
                    "endTime": 1513884411599,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513884411599,
                    "endTime": 1513884411604,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 92,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24573:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1513884411604,
                    "endTime": 1513884411755,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24581:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1513884411758,
                    "endTime": 1513884411760,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24594:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884411760,
                    "endTime": 1513884411770,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24605:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884411770,
                    "endTime": 1513884411774,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24616:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884411774,
                    "endTime": 1513884411778,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24627:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884411778,
                    "endTime": 1513884411782,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5610a37dd7cf33794e5e1a5406b268eefae8adf9:24638:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513884411782,
                    "endTime": 1513884411790,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.2.0"
    }
}